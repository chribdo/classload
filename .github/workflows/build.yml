name: Build Cross-Platform Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build EXE
        run: |
          pyinstaller --noconfirm --onefile --windowed --add-data "LICENSE.txt;." --add-data "hilfe.md;." --add-data "assets;assets" --name "Classload" --icon=assets/icon.ico tk_main_menue.py
      - name: Upload Windows EXE
        uses: actions/upload-artifact@v4
        with:
          name: Windows-EXE
          path: dist/*.exe




  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install py2app

      - name: Clean previous builds
        run: |
          rm -rf build dist *.spec

      - name: Build macOS .app with py2app
        run: |
          python setup.py py2app

      - name: Create ZIP archive of .app
        run: |
          cd dist
          zip -r Classload-mac.zip Classload.app

      - name: Upload .app ZIP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Classload-mac
          path: dist/Classload-mac.zip

build-linux:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Executable
      run: |
        pyinstaller --noconfirm --onefile --windowed \
          --add-data "LICENSE.txt:." \
          --add-data "hilfe.md:." \
          --add-data "assets:assets" \
          --name "Classload" \
          --icon=assets/icon.ico \
          tk_main_menue.py

    - name: Upload Linux Executable
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Binary
        path: dist/Classload


